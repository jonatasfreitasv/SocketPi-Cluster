apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: socketio-server
  namespace: default
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 3
  template:
    metadata:
      labels:
        k8s-app: socketio-server
        name: socketio-server
    spec:
      hostname: socketio-server
      subdomain: socketio-server
      hostNetwork: true
      containers:
      - name: socketio-server
        image: jonatasfreitasv/socketio-server
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          hostPort: 5000
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "1"]
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: socketio-server
  namespace: default
spec:
  selector:
    k8s-app: socketio-server
  ports:
  - name: websocket
    port: 5000
    targetPort: 5000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: socketio-server
  annotations:
    nginx.org/websocket-services: "ws-svc"
spec:
  rules:
  - host: socketio.server
    http:
      paths:
      - path: /socketio-server
        backend:
          serviceName: socketio-server
          servicePort: 5000